macro(SETUP_GROUPS src_files)
    foreach(FILE ${src_files})
        get_filename_component(PARENT_DIR "${FILE}" PATH)
        set(GROUP "${PARENT_DIR}")
        string(REPLACE "/" "\\" GROUP "${GROUP}")
        source_group("${GROUP}" FILES "${FILE}")
    endforeach()
endmacro()

macro(SETUP_APP projname)
    set(PROJ_NAME ${projname})
    project(${PROJ_NAME})
    file(GLOB_RECURSE SRC_FILES LIST_DIRECTORIES false RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} src/*.c??)
    file(GLOB_RECURSE HEADER_FILES LIST_DIRECTORIES false RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} src/*.h)
    include_directories(src)
    add_executable(${PROJ_NAME} ${SRC_FILES} ${HEADER_FILES})
    SETUP_GROUPS("${SRC_FILES}")
    SETUP_GROUPS("${HEADER_FILES}")
    set_target_properties(${PROJ_NAME} PROPERTIES OUTPUT_NAME_DEBUG ${PROJ_NAME}_Debug)
    set_target_properties(${PROJ_NAME} PROPERTIES OUTPUT_NAME_RELEASE ${PROJ_NAME}_Release)
    set_target_properties(${PROJ_NAME} PROPERTIES OUTPUT_NAME_RELWITHDEBINFO ${PROJ_NAME}_ReleaseDebInfo)
    set_target_properties(${PROJ_NAME} 
		PROPERTIES 
		CXX_STANDARD 17 
		CXX_EXTENSIONS OFF 
		CXX_STANDARD_REQUIRED ON
		)   
    if(MSVC)
        add_definitions(-D_CONSOLE)
        set_property(TARGET ${PROJ_NAME} PROPERTY VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}")
    endif()
endmacro()

macro(ADD_SOURCES _TARGET_NAME _TARGET_SOURCES)
    foreach(_SOURCES ${_TARGET_SOURCES})
        target_sources(${_TARGET_NAME} PRIVATE "${PROJECT_SOURCE_DIR}/res/${_SOURCE}")
        add_custom_command(TARGET ${_TARGET_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${PROJECT_SOURCE_DIR}/res/${_SOURCE}" "${CMAKE_CURRENT_BINARY_DIR}/${_SOURCE}")
    endforeach()
endmacro()